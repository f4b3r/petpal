version: '3'

volumes:
  mysql-data:
    driver: local
    
networks:
  backend:
  
services:

    # PETPAL CORE SERVICE
  petpal-core:
    image: petpal-core:1.0.0
    build:
        context: petpal-core
        dockerfile: Dockerfile
    restart: "always"
    networks:
      - backend
    ports:
      - "8081:8080"
      - "5005:5005"
    environment:
      - LOG_LEVEL=DEBUG
      - JAVA_DEBUG=true
      - JAVA_DEBUG_PORT=*:5005
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - DB_HOST=mysql_core
      - DB_PORT=3306
      - DB_NAME=petpal
      - DB_USER=petpalcore
      - DB_PWD=petpal
      - DB_SSL=false
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=ON_REGISTRATION_COMPLETE
    depends_on:
     - mysql_core
     - kafka
    logging:
        driver: local
        options:
            max-size: "20m"
            max-file: "10"
  # PETPAL Subscription  SERVICE
  petpal-subscription:
    image: petpal-subscription:1.0.0
    build:
      context: petpal-subscription
      dockerfile: Dockerfile
    restart: "no"
    depends_on:
      - kafka
      - mongodb
    ports:
      - "8082:8080"
      - "5006:5005"
    environment:
      - LOG_LEVEL=DEBUG
      - JAVA_DEBUG=true
      - JAVA_DEBUG_PORT=*:5005
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=ON_REGISTRATION_COMPLETE
      - MONGO_DB=petpal_db
      - MONGO_HOST=localhost
      - MONGO_PORT=27017
      - MONGO_USER=user
      - MONGO_PASSWORD=pass
      - SPRING_DATA_MONGODB_URI=mongodb://user:pass@mongodb:27017/petpal_db
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=petpal_db
    logging:
      driver: local
      options:
        max-size: "20m"
        max-file: "10"
    networks:
      - backend

    # DATABASE MONGO

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    networks:
      - backend


    # Database Service (Mysql)
  mysql_core:
    image: mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: petpal
      MYSQL_USER: petpalcore
      MYSQL_PASSWORD: petpal
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend

  # Kafka Service
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "ON_REGISTRATION_COMPLETE:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

  # Zookeeper Service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - backend
